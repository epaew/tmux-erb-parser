---
## for test replace_source_file
- before: source ${HOME}/.tmux.conf
  after: run-shell "<%= TmuxERBParser::PARSER_CMD %> --inline ${HOME}/.tmux.conf"
- before: bind C-r source ${HOME}/.tmux.conf\; display-message "Reload Config."
  after: bind C-r run-shell "<%= TmuxERBParser::PARSER_CMD %> --inline ${HOME}/.tmux.conf"\; display-message "Reload Config."
- before: bind C-r "source-file ${HOME}/.tmux.conf"\; display-message "Reload Config."
  after: bind C-r "run-shell \"<%= TmuxERBParser::PARSER_CMD %> --inline ${HOME}/.tmux.conf\""\; display-message "Reload Config."

## for test strip_comments
- before: '# test comment'
  after: ''
  strip_comments: true
- before: 'bind C-t send-prefix # puts "C-t" twice, send "C-t"'
  after: bind C-t send-prefix
  strip_comments: true
- before: bind c new-window -c '#{pane_current_path}'
  after: bind c new-window -c '#{pane_current_path}'
  strip_comments: true
- before: bind c new-window -c "#{pane_current_path}"
  after: bind c new-window -c "#{pane_current_path}"
  strip_comments: true

## for test blank line trimming
- before: |
    set -g default-terminal tmux-256color


    set -g display-panes-time 10000

  after:
    - set -g default-terminal tmux-256color
    - ""
    - set -g display-panes-time 10000
  strip_comments: true

## for test type = json
- before: |
    {
      "set": {
        "-g": {
          "default-terminal": "tmux-256color",
          "display-panes-time": 10000
        }
      }
    }
  after:
    - set -g default-terminal tmux-256color
    - set -g display-panes-time 10000
  type: json

## for test type = yaml
- before: |
    - set:
        -g:
          default-terminal: tmux-256color
          display-panes-time: 10000
  after:
    - set -g default-terminal tmux-256color
    - set -g display-panes-time 10000
  type: yaml

# from "https://github.com/junegunn/dotfiles/blob/master/tmux.conf"
- before:
    - 'if-shell "test $USER = jg" \'
    - '  "unbind C-a; set-option -g prefix \\ ; bind-key ] send-prefix; bind-key p paste-buffer; bind-key \\ last-window"'
  after:
    - 'if-shell "test $USER = jg" \'
    - '  "unbind C-a; set-option -g prefix \\ ; bind-key ] send-prefix; bind-key p paste-buffer; bind-key \\ last-window"'
- before:
    - 'bind-key F10 set-option -g prefix "\\"  \;\'
    - '             bind-key ] send-prefix     \;\'
    - '             bind-key p paste-buffer    \;\'
    - '             bind-key "\\" last-window'
  after:
    - 'bind-key F10 set-option -g prefix "\\"  \;\'
    - '             bind-key ] send-prefix     \;\'
    - '             bind-key p paste-buffer    \;\'
    - '             bind-key "\\" last-window'
